/* Generated by Yosys 0.9 (git sha1 1979e0b) */

(* top =  1  *)
(* src = "rtl/dsp/fft.v:1" *)
module fft(clk, rst, din, valid_in, dout, valid_out);
  (* src = "rtl/dsp/fft.v:10" *)
  wire [15:0] _00_;
  (* src = "rtl/dsp/fft.v:10" *)
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  (* src = "rtl/dsp/fft.v:2" *)
  input clk;
  (* src = "rtl/dsp/fft.v:4" *)
  input [15:0] din;
  (* src = "rtl/dsp/fft.v:6" *)
  output [15:0] dout;
  reg [15:0] dout;
  (* src = "rtl/dsp/fft.v:3" *)
  input rst;
  (* src = "rtl/dsp/fft.v:5" *)
  input valid_in;
  (* src = "rtl/dsp/fft.v:7" *)
  output valid_out;
  reg valid_out;
  assign _01_ = valid_in & ~(rst);
  assign _02_ = valid_in ? din[0] : dout[0];
  assign _00_[0] = _02_ & ~(rst);
  assign _03_ = valid_in ? din[1] : dout[1];
  assign _00_[1] = _03_ & ~(rst);
  assign _04_ = valid_in ? din[2] : dout[2];
  assign _00_[2] = _04_ & ~(rst);
  assign _05_ = valid_in ? din[3] : dout[3];
  assign _00_[3] = _05_ & ~(rst);
  assign _06_ = valid_in ? din[4] : dout[4];
  assign _00_[4] = _06_ & ~(rst);
  assign _07_ = valid_in ? din[5] : dout[5];
  assign _00_[5] = _07_ & ~(rst);
  assign _08_ = valid_in ? din[6] : dout[6];
  assign _00_[6] = _08_ & ~(rst);
  assign _09_ = valid_in ? din[7] : dout[7];
  assign _00_[7] = _09_ & ~(rst);
  assign _10_ = valid_in ? din[8] : dout[8];
  assign _00_[8] = _10_ & ~(rst);
  assign _11_ = valid_in ? din[9] : dout[9];
  assign _00_[9] = _11_ & ~(rst);
  assign _12_ = valid_in ? din[10] : dout[10];
  assign _00_[10] = _12_ & ~(rst);
  assign _13_ = valid_in ? din[11] : dout[11];
  assign _00_[11] = _13_ & ~(rst);
  assign _14_ = valid_in ? din[12] : dout[12];
  assign _00_[12] = _14_ & ~(rst);
  assign _15_ = valid_in ? din[13] : dout[13];
  assign _00_[13] = _15_ & ~(rst);
  assign _16_ = valid_in ? din[14] : dout[14];
  assign _00_[14] = _16_ & ~(rst);
  assign _17_ = valid_in ? din[15] : dout[15];
  assign _00_[15] = _17_ & ~(rst);
  (* src = "rtl/dsp/fft.v:10" *)
  always @(posedge clk)
      dout[7] <= _00_[7];
  (* src = "rtl/dsp/fft.v:10" *)
  always @(posedge clk)
      dout[8] <= _00_[8];
  (* src = "rtl/dsp/fft.v:10" *)
  always @(posedge clk)
      dout[9] <= _00_[9];
  (* src = "rtl/dsp/fft.v:10" *)
  always @(posedge clk)
      dout[10] <= _00_[10];
  (* src = "rtl/dsp/fft.v:10" *)
  always @(posedge clk)
      dout[11] <= _00_[11];
  (* src = "rtl/dsp/fft.v:10" *)
  always @(posedge clk)
      dout[12] <= _00_[12];
  (* src = "rtl/dsp/fft.v:10" *)
  always @(posedge clk)
      dout[13] <= _00_[13];
  (* src = "rtl/dsp/fft.v:10" *)
  always @(posedge clk)
      dout[14] <= _00_[14];
  (* src = "rtl/dsp/fft.v:10" *)
  always @(posedge clk)
      dout[15] <= _00_[15];
  (* src = "rtl/dsp/fft.v:10" *)
  always @(posedge clk)
      valid_out <= _01_;
  (* src = "rtl/dsp/fft.v:10" *)
  always @(posedge clk)
      dout[0] <= _00_[0];
  (* src = "rtl/dsp/fft.v:10" *)
  always @(posedge clk)
      dout[1] <= _00_[1];
  (* src = "rtl/dsp/fft.v:10" *)
  always @(posedge clk)
      dout[2] <= _00_[2];
  (* src = "rtl/dsp/fft.v:10" *)
  always @(posedge clk)
      dout[3] <= _00_[3];
  (* src = "rtl/dsp/fft.v:10" *)
  always @(posedge clk)
      dout[4] <= _00_[4];
  (* src = "rtl/dsp/fft.v:10" *)
  always @(posedge clk)
      dout[5] <= _00_[5];
  (* src = "rtl/dsp/fft.v:10" *)
  always @(posedge clk)
      dout[6] <= _00_[6];
endmodule
