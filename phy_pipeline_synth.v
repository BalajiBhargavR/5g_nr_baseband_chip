/* Generated by Yosys 0.9 (git sha1 1979e0b) */

(* top =  1  *)
(* src = "rtl/baseband/phy_pipeline.v:1" *)
module phy_pipeline(clk, rst, data_in, data_out);
  (* src = "rtl/baseband/phy_pipeline.v:8" *)
  wire [15:0] _00_;
  (* src = "rtl/baseband/phy_pipeline.v:2" *)
  input clk;
  (* src = "rtl/baseband/phy_pipeline.v:4" *)
  input [15:0] data_in;
  (* src = "rtl/baseband/phy_pipeline.v:5" *)
  output [15:0] data_out;
  reg [15:0] data_out;
  (* src = "rtl/baseband/phy_pipeline.v:3" *)
  input rst;
  assign _00_[7] = data_in[7] & ~(rst);
  assign _00_[8] = data_in[8] & ~(rst);
  assign _00_[9] = data_in[9] & ~(rst);
  assign _00_[10] = data_in[10] & ~(rst);
  assign _00_[11] = data_in[11] & ~(rst);
  assign _00_[12] = data_in[12] & ~(rst);
  assign _00_[13] = data_in[13] & ~(rst);
  assign _00_[14] = data_in[14] & ~(rst);
  assign _00_[15] = data_in[15] & ~(rst);
  assign _00_[0] = data_in[0] & ~(rst);
  assign _00_[1] = data_in[1] & ~(rst);
  assign _00_[2] = data_in[2] & ~(rst);
  assign _00_[3] = data_in[3] & ~(rst);
  assign _00_[4] = data_in[4] & ~(rst);
  assign _00_[5] = data_in[5] & ~(rst);
  assign _00_[6] = data_in[6] & ~(rst);
  (* src = "rtl/baseband/phy_pipeline.v:8" *)
  always @(posedge clk)
      data_out[0] <= _00_[0];
  (* src = "rtl/baseband/phy_pipeline.v:8" *)
  always @(posedge clk)
      data_out[1] <= _00_[1];
  (* src = "rtl/baseband/phy_pipeline.v:8" *)
  always @(posedge clk)
      data_out[2] <= _00_[2];
  (* src = "rtl/baseband/phy_pipeline.v:8" *)
  always @(posedge clk)
      data_out[3] <= _00_[3];
  (* src = "rtl/baseband/phy_pipeline.v:8" *)
  always @(posedge clk)
      data_out[4] <= _00_[4];
  (* src = "rtl/baseband/phy_pipeline.v:8" *)
  always @(posedge clk)
      data_out[5] <= _00_[5];
  (* src = "rtl/baseband/phy_pipeline.v:8" *)
  always @(posedge clk)
      data_out[6] <= _00_[6];
  (* src = "rtl/baseband/phy_pipeline.v:8" *)
  always @(posedge clk)
      data_out[7] <= _00_[7];
  (* src = "rtl/baseband/phy_pipeline.v:8" *)
  always @(posedge clk)
      data_out[8] <= _00_[8];
  (* src = "rtl/baseband/phy_pipeline.v:8" *)
  always @(posedge clk)
      data_out[9] <= _00_[9];
  (* src = "rtl/baseband/phy_pipeline.v:8" *)
  always @(posedge clk)
      data_out[10] <= _00_[10];
  (* src = "rtl/baseband/phy_pipeline.v:8" *)
  always @(posedge clk)
      data_out[11] <= _00_[11];
  (* src = "rtl/baseband/phy_pipeline.v:8" *)
  always @(posedge clk)
      data_out[12] <= _00_[12];
  (* src = "rtl/baseband/phy_pipeline.v:8" *)
  always @(posedge clk)
      data_out[13] <= _00_[13];
  (* src = "rtl/baseband/phy_pipeline.v:8" *)
  always @(posedge clk)
      data_out[14] <= _00_[14];
  (* src = "rtl/baseband/phy_pipeline.v:8" *)
  always @(posedge clk)
      data_out[15] <= _00_[15];
endmodule
